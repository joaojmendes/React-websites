{"version":3,"sources":["webparts/webSites/components/Attachments.tsx"],"names":[],"mappings":"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","file":"webparts/webSites/components/Attachments.js","sourcesContent":["import * as React from 'react';\r\n//import * as $ from 'jquery';\r\nimport * as pnp from 'sp-pnp-js';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, } from 'office-ui-fabric-react/lib/Button';\r\nimport {\r\n    DocumentCard,\r\n    // DocumentCardActivity,\r\n    DocumentCardActions,\r\n    DocumentCardPreview,\r\n    DocumentCardTitle,\r\n    //  IDocumentCardPreviewProps\r\n} from 'office-ui-fabric-react/lib/DocumentCard';\r\nimport { ImageFit } from 'office-ui-fabric-react/lib/Image';\r\n//let previewProps: IDocumentCardPreviewProps;\r\nlet previewImages = new Array<any>();\r\n//let _documentCards: any = '';\r\nexport class Attachments extends React.Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            showDialog: false,\r\n            dialogMessage: '',\r\n            webs: []\r\n        };\r\n\r\n        // registo de event handlers\r\n        // \r\n       \r\n    }\r\n    // Load Item Attachments\r\n    _loadWebSites() {\r\n        previewImages = [];\r\n      //  let _webs = pnp.sp.web.webs.get();\r\n       // let item = pnp.sp.web.lists.getById(this.props.ListGuid)\r\n       //     .items.getById(this.props.RaidId);\r\n       pnp.sp.web.webs\r\n            .get().then(_webs => {\r\n                _webs.map((_web: any, i: number) => {\r\n                    let _iconUrl = '';\r\n                    previewImages.push({\r\n                        name: _web.Title,\r\n                        url: _web.Url,\r\n                        previewImageSrc: '',\r\n                        iconSrc: _web.SiteLogoUrl,\r\n                        imageFit: ImageFit.cover,\r\n                        width: 200,\r\n                        height: 100,\r\n                        accentColor: '#0078d7'\r\n                    });\r\n                });\r\n                this.setState({\r\n                    webs: _webs\r\n                });\r\n            })\r\n            .catch((reason: any) => {\r\n                this.setState({\r\n                    showDialog: true,\r\n                    // tslint:disable-next-line:max-line-length\r\n                    dialogMessage: 'Error on read file Attachments. Error: ' + reason\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    // Run befor render component\r\n    componentDidMount() {\r\n        this._loadWebSites();\r\n    }\r\n\r\n    // Render Attachments\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                {this.state.webs.map((_web: any, i: number) => {\r\n                    return (\r\n                        \r\n                            <div className=\"DocumentCard\" style={{ marginTop: 15 }}>\r\n                                <DocumentCard onClickHref={_web.Url}>\r\n                                    <DocumentCardPreview previewImages={[previewImages[i]]} />\r\n                                    <DocumentCardTitle\r\n                                        title={_web.Title}\r\n                                        shouldTruncate={true} />\r\n                                </DocumentCard>\r\n                            </div>\r\n                    );\r\n                })}\r\n                <Dialog\r\n                    isOpen={this.state.showDialog}\r\n                    type={DialogType.normal}\r\n                    onDismiss={this._closeDialog}\r\n                    title=\"WebSites\"\r\n                    subText={this.state.dialogMessage}\r\n                    isBlocking={true}>\r\n                    <DialogFooter>\r\n                        <PrimaryButton onClick={this._closeDialog}>OK</PrimaryButton>\r\n                    </DialogFooter>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // close dialog\r\n    private _closeDialog(e: any) {\r\n        //  \r\n        e.preventDefault();\r\n        this.setState({\r\n            showDialog: false,\r\n            dialogMessage: '',\r\n        });\r\n    }\r\n}\r\nexport default Attachments;"],"sourceRoot":"../../../../src"}